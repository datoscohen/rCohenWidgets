[{"path":"https://datoscohen.github.io/rCohenWidgets/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Augusto Hassel. Author, maintainer. Juan P. Dugo. Author. Cohen S... Copyright holder.","code":""},{"path":"https://datoscohen.github.io/rCohenWidgets/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hassel , Dugo J (2023). rCohenWidgets: Widgets de react usados en Data & BI Cohen. https://github.com/datoscohen/rCohenWidgets, https://datoscohen.github.io/rCohenWidgets/.","code":"@Manual{,   title = {rCohenWidgets: Widgets de react usados en Data & BI Cohen},   author = {Augusto Hassel and Juan P. Dugo},   year = {2023},   note = {https://github.com/datoscohen/rCohenWidgets, https://datoscohen.github.io/rCohenWidgets/}, }"},{"path":"https://datoscohen.github.io/rCohenWidgets/index.html","id":"rcohenwidgets-","dir":"","previous_headings":"","what":"Widgets de react usados en Data & BI Cohen","title":"Widgets de react usados en Data & BI Cohen","text":"El propósito principal de rCohenWidgets es proporcionar la capacidad de integrar componentes y bibliotecas de React en una aplicación Shiny. Aunque nuestra atención se centra principalmente en React, limitamos su alcance exclusivamente este framework. Estamos abiertos incorporar funciones elaboradas con Javascript y otros frameworks. Nuestro objetivo es ampliar continuamente las funcionalidades de esta librería para potenciar el desarrollo de aplicaciones Shiny más versátiles y ricas en características.","code":""},{"path":"https://datoscohen.github.io/rCohenWidgets/index.html","id":"instalación","dir":"","previous_headings":"","what":"Instalación","title":"Widgets de react usados en Data & BI Cohen","text":"Se puede instalar la versión development de rCohenWidgets desde GitHub de la siguiente manera:","code":"# install.packages(\"devtools\") devtools::install_github(\"datoscohen/rCohenWidgets\")"},{"path":"https://datoscohen.github.io/rCohenWidgets/reference/strengthBarInput.html","id":null,"dir":"Reference","previous_headings":"","what":"React Password Strength Bar — strengthBarInput","title":"React Password Strength Bar — strengthBarInput","text":"Esta función proporciona un widget de entrada de contraseña para Shiny, que incluye una barra de fortaleza de contraseña proveniente de la libreria react-password-strength-bar. La barra de fortaleza muestra la seguridad del texto ingresado basándose en cinco posibles estados, siendo el estado mayor el más seguro. El widget de entrada crea una lista en Shiny que contiene el texto ingresado y la puntuación de seguridad, que varía de 0 4.","code":""},{"path":"https://datoscohen.github.io/rCohenWidgets/reference/strengthBarInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"React Password Strength Bar — strengthBarInput","text":"","code":"strengthBarInput(   inputId,   default = list(password = \"\"),   scoreWords = c(\"Insegura\", \"Mala\", \"Regular\", \"Buena\", \"Excelente\"),   minLength = 4,   shortScoreWord = \"Muy Corta\" )"},{"path":"https://datoscohen.github.io/rCohenWidgets/reference/strengthBarInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"React Password Strength Bar — strengthBarInput","text":"inputId Character. Id del input. default List. Valor que va tomar el input por defecto, puede ser NULL también. scoreWords Character. El nombre para cada estado de la barra, tienen que ser cinco. minLength Numeric. La cantidad mínima de caracteres para que aparezca la leyenda definida en shortScoreWord. shortScoreWord Character. Texto que se muestra cuando se alcanzan la cantidad mínima de caracteres.","code":""},{"path":"https://datoscohen.github.io/rCohenWidgets/reference/strengthBarInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"React Password Strength Bar — strengthBarInput","text":"Un widget de entrada de shiny.","code":""},{"path":"https://datoscohen.github.io/rCohenWidgets/reference/strengthBarInput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"React Password Strength Bar — strengthBarInput","text":"","code":"if (FALSE) { library(shiny)  ui <- fluidPage(   titlePanel(\"Ejemplo de Barra de Fortaleza de Contraseña\"),   sidebarLayout(     sidebarPanel(       strengthBarInput(\"contrasena\", default = list(password = \"\"))     ),     mainPanel(       verbatimTextOutput(\"output\")     )   ) )  server <- function(input, output) {   output$output <- renderPrint({     input$contrasena   }) }  shinyApp(ui = ui, server = server) }"},{"path":"https://datoscohen.github.io/rCohenWidgets/news/index.html","id":"rcohenwidgets-010","dir":"Changelog","previous_headings":"","what":"rCohenWidgets 0.1.0","title":"rCohenWidgets 0.1.0","text":"Se agrego un archivo NEWS.md para mantener un seguimiento de los cambios en el paquete. Agregamos función strengthBarInput() para crear un input de fortaleza de contraseña en Shiny.","code":""}]
